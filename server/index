// server/index.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const path = require("path");
require("dotenv").config(); // ‚úÖ


const authRoutes = require("./routes/auth");

const app = express();
const PORT = process.env.PORT || 3000;
const MONGO_URI = process.env.MONGO_URI || "mongodb://localhost:27017/med-delivery";

// Middleware
app.use(cors());
app.use(express.json());

// Serve frontend
app.use(express.static(path.join(__dirname, "../client")));

// API routes
app.use("/api/auth", authRoutes);

// Fallback for client-side routing
app.get("*", (req, res) => {
  res.sendFile(path.join(__dirname, "../client/index.html"));
});

// MongoDB connection
mongoose.connect(MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => {
  console.log("‚úÖ MongoDB connected");
  app.listen(PORT, () => console.log(`üöÄ Server running on http://localhost:${PORT}`));
})
.catch((err) => {
  console.error("‚ùå MongoDB connection error:", err);
});
const medicineRoutes = require("./routes/medicine");
app.use("/api/medicine", medicineRoutes);

app.use(express.static(path.join(__dirname, "../client")));
